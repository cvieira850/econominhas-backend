// Docs: https://dbml.dbdiagram.io/docs/
// View: https://dbdocs.io/henriqueleite42/Econominhas?view=relationships

Project Econominhas {
  database_type: 'PostgreSQL'
  Note: '''
    # Econominhas Database
  '''
}

//
//
// Subscriptions
//
//

Table subscriptions {
  id char(16) [pk]
	name varchar(50) [not null]
	icon varchar(50) [not null]
	// Number limits
	bank_accounts smallint [not null, note: '-1 = Infinite']
	postpaid_card smallint [not null, note: '-1 = Infinite']
	prepaid_card smallint [not null, note: '-1 = Infinite']
	categories smallint [not null, note: '-1 = Infinite']
	transactions_per_month smallint [not null, note: '-1 = Infinite']
	recurrent_transactions smallint [not null, note: '-1 = Infinite']
	reports smallint [not null, note: '-1 = Infinite']
	tags smallint [not null, note: '-1 = Infinite']
	reminders smallint [not null, note: '-1 = Infinite']
	bank_integrations smallint [not null, note: '-1 = Infinite']
	// Boolean limits
	web boolean [not null, note: 'If the user has access to the web version']
}

//
//
// Accounts
//
//

Table accounts {
  id char(16) [pk]
	subscription_id char(16) [not null]  // See Ref accounts.subscription_id
  email varchar [unique]
  phone varchar [unique]
  created_at timestamp [default: `now()`, not null]
  note: "table 'accounts' contains user information"
}

Ref: subscriptions.id - accounts.subscription_id [delete: restrict]

Table google {
  id varchar [pk]
	account_id char(16) [not null] // See Ref google.account_id
  access_token varchar [not null]
  refresh_token varchar [not null]
  expires_at timestamp [not null]
  note: "table 'google' contains user's link to google account"
}

Ref: accounts.id - google.account_id [delete: restrict]

Table terms_of_use {
  id varchar [pk] // semver
  terms varchar [not null]
  live_at timestamp
  created_at timestamp [default: `now()`, not null]
  note: "table 'terms_of_use' contains the terms of use"
}

Table terms_of_use_accepted {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref terms_of_use_accepted.account_id
	terms_of_use_id varchar [not null] // See Ref terms_of_use_accepted.terms_of_use_id
  accepted_at timestamp [default: `now()`, not null]
  note: "table 'terms_of_use_accepted' contains the record of all the terms accepted by the user"
}

Ref: accounts.id < terms_of_use_accepted.account_id [delete: cascade]
Ref: terms_of_use.id < terms_of_use_accepted.terms_of_use_id [delete: restrict]

//
//
// Banks
//
//

Table bank_providers {
  id char(16) [pk]
	name varchar(50) [not null]
	code char(3) [not null]
	icon_url varchar(200) [not null]
	color char(7) [not null]
  note: "table 'bank_providers' contains the record of all the existant banks"
}

Table bank_accounts {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref bank_accounts.account_id
	bank_id char(16) [not null] // See Ref bank_accounts.bank_id
	account_number char(6) [not null]
	branch char(4) [not null]
	balance int [not null]
	name varchar(50) [not null]
  note: "table 'bank_accounts' contains the record of all the user's banks accounts"
}

Ref: accounts.id < bank_accounts.account_id [delete: restrict]
Ref: bank_providers.id < bank_accounts.bank_id [delete: restrict]

//
//
// Cards
//
//

enum card_type {
	CREDIT
	VA
	VR
	VT
}

enum card_network {
	VISA
	MASTERCARD
	ELO
	SODEXO
}

enum card_pay_at {
	DUE
	STATEMENT
}

Table card_providers {
  id char(16) [pk]
	bank_id char(16) // See Ref card_providers.bank_id
	name varchar(50) [not null]
	icon_url varchar(200) [not null]
	color char(7) [not null]
	type card_type [not null]
	network card_network [not null]
	statement_days smallint [note: 'Only postpaid cards have this column']
  note: "table 'card_providers' contains the record of all the existant cards"
}

Ref: bank_providers.id < card_providers.bank_id [delete: restrict]

Table cards {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref cards.account_id
	card_provider_id char(16) [not null] // See Ref cards.card_provider_id
	name varchar(50) [not null]
	last_four_digits char(4) [not null]

	due_day char(2) [note: 'Only postpaid cards have this column']
	limit int [note: 'Only postpaid cards have this column']
	pay_at card_pay_at [note: 'Only postpaid cards have this column']
	pay_with_bank_account_id char(16) [note: 'Only postpaid cards have this column'] // See Ref cards.bank_id

	balance int [note: 'Only prepaid cards have this column']

  note: "table 'cards' contains the record of all the user's cards"
}

Ref: accounts.id < cards.account_id [delete: restrict]
Ref: card_providers.id < cards.card_provider_id [delete: restrict]
Ref: bank_accounts.id < cards.pay_with_bank_account_id [delete: restrict]

//
//
// Categories
//
//

Table categories {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref categories.account_id
	name varchar(50) [not null]
	icon_url varchar(200) [not null]
	color char(7) [not null]
	active boolean [not null]
  note: "table 'categories' contains all the user's categories"
}

Ref: accounts.id < categories.account_id [delete: restrict]

//
//
// Budgets
//
//

Table budgets {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref budget.account_id
	name varchar(50) [not null]
	year char(4) [not null]
  note: "table 'budgets' contains the user's budget information"
}

Ref: accounts.id < budgets.account_id [delete: restrict]

Table budget_items {
	budget_id char(16) [not null] // See Ref budget_items.budget_id
	category_id char(16) [not null] // See Ref budget_items.category_id
	month char(2) [not null]
	budget int [not null]
  note: "table 'budget_items' contains the user's budgets by category"

	indexes {
  	(budget_id, category_id, month) [pk]
	}
}

Ref: budgets.id < budget_items.budget_id [delete: restrict]
Ref: categories.id < budget_items.category_id [delete: restrict]

//
//
// Transactions
//
//

enum transaction_type {
	IN
	OUT
	TRANSFER
}

enum payment_method {
	CARD
	BANK_ACCOUNT
}

enum recurrent_transaction_frequency {
	DAILY [note: 'Every day']
	WEEKLY [note: 'Every week']
	CUSTOM_WEEKLY [note: 'Every week, on the days defined by the user']
	MONTHLY [note: 'Once a month']
	BI_MONTHLY [note: 'Twice a month']
	SEMI_MONTHLY [note: 'One month yes, another month no']
	QUARTERLY [note: 'Once every 3 months']
	ANNUALY [note: 'Once a year']
	SEMI_ANNUALY [note: 'Once every 6 months']
}

enum recurrency_rule {
	EXACT_VALUE
	MBWOPM [note: 'MULTIPLY_BY_WEEKS_OF_PREV_MONTH, the value is multiplied by the amount of weeks of the previous month']
}

Table transactions {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref transactions.account_id
	type transaction_type [not null]
	name varchar(50) [not null]
	description varchar(300) [not null]
	value int [not null]
	budget_id char(16) [not null] // See Ref transactions.budget_id
  created_at timestamp [default: `now()`, not null]

	payment_method payment_method [note: 'Only type=IN,type=OUT transactions have this column']
	category_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref transactions.category_id
	card_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref transactions.card_id
	installment_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref transactions.installment_id
	bank_account_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref transactions.bank_account_id

	bank_account_from_id char(16) [note: 'Only type=TRANSFER transactions have this column'] // See Ref transactions.bank_account_from_id
	bank_account_to_id char(16) [note: 'Only type=TRANSFER transactions have this column'] // See Ref transactions.bank_account_to_id

  note: "table 'transactions' contains all the user's transactions"
}

Ref: accounts.id < transactions.account_id [delete: restrict]
Ref: categories.id < transactions.category_id [delete: restrict]
Ref: budgets.id < transactions.budget_id [delete: restrict]
Ref: cards.id < transactions.card_id [delete: restrict]
Ref: installments.id - transactions.installment_id [delete: restrict]
Ref: bank_accounts.id < transactions.bank_account_id [delete: restrict]
Ref: bank_accounts.id < transactions.bank_account_from_id [delete: restrict]
Ref: bank_accounts.id < transactions.bank_account_to_id [delete: restrict]

Table installments {
  id char(16) [pk]
	total smallint [not null]
	current smallint [not null]
	transaction_id char(16) [not null] // See Ref transactions.budget_id
  created_at timestamp [default: `now()`, not null]

  note: "table 'installments' contains the installment data of an transactions"
}

Ref: transactions.id - installments.transaction_id [delete: cascade]

Table recurrent_transaction_rules {
  id char(16) [pk]
	rule recurrency_rule [not null]
	weekday int
	weekdays int[]
	day_of_the_month varchar(5)
	month int

  note: "table 'recurrent_transactions' contains all the user's recurrent transactions"
}

Table recurrent_transactions {
  id char(16) [pk]
	account_id char(16) [not null] // See Ref recurrent_transactions.account_id
	frequency recurrent_transaction_frequency [not null]
	rule_id char(16) [not null]  // See Ref recurrent_transactions.rule_id
	// Data to create the transaction
	type transaction_type
	name varchar(50) [not null]
	description varchar(300) [not null]
	value int [not null]
	// Only type=IN,type=OUT
	category_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref recurrent_transactions.category_id
	card_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref recurrent_transactions.card_id
	bank_account_id char(16) [note: 'Only type=IN,type=OUT transactions have this column'] // See Ref recurrent_transactions.bank_account_id
	// Only Only type=TRANSFER
	bank_account_from_id char(16) [note: 'Only type=TRANSFER transactions have this column'] // See Ref recurrent_transactions.bank_account_from_id
	bank_account_to_id char(16) [note: 'Only type=TRANSFER transactions have this column'] // See Ref recurrent_transactions.bank_account_to_id

  note: "table 'recurrent_transactions' contains all the user's recurrent transactions"
}

Ref: accounts.id < recurrent_transactions.account_id [delete: restrict]
Ref: recurrent_transaction_rules.id < recurrent_transactions.rule_id [delete: restrict]
Ref: categories.id < recurrent_transactions.category_id [delete: restrict]
Ref: cards.id < recurrent_transactions.card_id [delete: restrict]
Ref: bank_accounts.id < recurrent_transactions.bank_account_id [delete: restrict]
Ref: bank_accounts.id < recurrent_transactions.bank_account_from_id [delete: restrict]
Ref: bank_accounts.id < recurrent_transactions.bank_account_to_id [delete: restrict]
